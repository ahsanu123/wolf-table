#.interface: fill=lightblue
#.enumeration: fill=lightgreen
#.type: fill=lightgray
[HElement|+_: HTMLElement;+_data: Map<any, any>|+element(): any;+data(): any;+on(): this;+focus(): this;+value(): any;+textContent(): this;+html(): this;+attr(): any;+css(): any;+rect(): DOMRect;+offset(): { x: number; y: number; width: number; height: number; };+computedStyle(): CSSStyleDeclaration;+show(): this;+hide(): this;+scrollx(): any;+scrolly(): any;+after(): this;+before(): this;+append(): this;+remove(): void;+cloneNode(): Node]
[<type>CSSAttrs|+left?: number;+top?: number;+width?: number;+height?: number;+position?: string|]
[EventEmitter|+_events: Map<any, any>|+on(): this;+off(): this;+emit(): this]
[Table|+_rendererOptions: TableRendererOptions;+_copyable: boolean;+_editable: boolean;+_minRowHeight: number;+_minColWidth: number;+_width: () => number;+_height: () => number;+_contentRect: Rect;+_container: HElement;+_data: TableData;+_renderer: TableRenderer;+_cells: Cells;+_vScrollbar: Scrollbar;+_hScrollbar: Scrollbar;+_rowResizer: Resizer;+_colResizer: Resizer;+_editor: Editor;+_editors: Map<any, any>;+_selector: Selector;+_overlayer: Overlayer;+_canvas: HElement;+_emitter: EventEmitter|+contentRect(): Rect;+container(): HElement;+resize(): void;+freeze(): this;+isMerged(): boolean;+merge(): this;+unmerge(): this;+row(): any;+rowHeight(): any;+rowsHeight(): number;+isLastRow(): boolean;+col(): any;+colWidth(): any;+colsWidth(): number;+isLastCol(): boolean;+formulaParser(): this;+formatter(): this;+style(): Partial<Style>;+addStyle(): number;+clearStyles(): this;+addBorder(): this;+clearBorder(): this;+clearBorders(): this;+cell(): any;+cellValue(): DataCellValue;+cellValueString(): string;+render(): this;+data(): any;+copy(): this;+fill(): Table;+toHtml(): string;+toArrays(): DataCellValue\[\]\[\];+onClick(): this;+onContextmenu(): this;+addEditor(): this;+static create(): Table]
[<type>TableRendererOptions|+style?: Partial<Style>;+headerStyle?: Partial<Style>;+rowHeader?: Partial<RowHeader>;+colHeader?: Partial<ColHeader>;+gridline?: Partial<Gridline>;+headerGridline?: Partial<Gridline>;+freeGridline?: Partial<Gridline>|]
[<type>TableDataOptions|+rows?: number;+cols?: number;+rowHeight?: number;+colWidth?: number|]
[<type>TableOptions|+minRowHeight?: number;+minColWidth?: number;+scrollable?: boolean;+resizable?: boolean;+selectable?: boolean;+editable?: boolean;+copyable?: boolean;+data?: TableDataOptions;+renderer?: TableRendererOptions|]
[Cells|+_: IndexDataCell\[\];+_indexes: Map<any, any>;+_formulas: number\[\];+_formulaParser: FormulaParser;+_formatter: Formatter|+formulaParser(): this;+formatter(): this;+load(): void;+get(): IndexDataCell;+remove(): this;+set(): void;-resetIndexes(): void;-updateIndex(): void;-addFormula(): void;-resetFormulas(): void]
[<type>CopyData|+range: Range;+cells: Cells;+data: TableData|]
[<type>CopyCells|+range: Range;+cells: Cells;+data: TableData|]
[<type>DataRows|+len: number|]
[<type>DataCols|+len: number|]
[<type>TableData|+rows: DataRows;+cols: DataCols;+rowHeight: number;+colWidth: number;+scroll: \[number, number, number, number\];+style: Style;+styles: Partial<Style>\[\];+borders: Border\[\];+merges: string\[\];+cells: IndexDataCell\[\];+freeze?: string|]
[Editor|+_: HElement;+_target: HElement;+_rect: Rect;+_value: Cell;+_visible: boolean;+_moveChanger: MoveChanger;+_changer: Changer|+target(): this;+cellIndex(): this;+value(): this;+changed(): void;+rect(): this;+show(): this;+hide(): this;+moveChanger(): this;+changer(): this]
[Overlayer|+_areas: HElement\[\];+_headerAreas: HElement\[\];+_areaRects: Rect\[\]|+area(): any;+headerArea(): any;+inAreas(): boolean]
[Resizer|+_: HElement;+_hover: HElement;+_line: HElement;+_type: ResizerType;+_minValue: number;+_lineLength: () => number;+_cell: AreaCell;+_change: (value: number, cell: AreaCell) => void|+show(): void;+hide(): void]
[Scrollbar|+_: HElement;+_content: HElement;+_value: number;+_maxValue: number;+_lastOffset: number;+_type: "vertical" \| "horizontal";+_change: (direction: "+" \| "-", value: number, event: Event) => void|+change(): this;+scrollBy(): Scrollbar;+scrollToStart(): this;+scrollToEnd(): this;+scroll(): any;+resize(): this]
[SelectArea|+_: HElement;+_rect: Rect;+_target: HElement|+append(): this;+offset(): { x: number; y: number; width: number; height: number; };+rect(): this;+target(): this;+show(): this;+clear(): void]
[Selector|+_placement: Placement;+_editable: boolean;+_ranges: Range\[\];+_rowHeaderRanges: Range\[\];+_colHeaderRanges: Range\[\];+_areas: SelectArea\[\];+_focus: \[number, number\];+_focusRange: Range;+_focusArea: SelectArea;+_move: \[number, number\];+_copyRange: Range;+_copyAreas: SelectArea\[\];+_autofillRange: Range;+_autofillAreas: SelectArea\[\];+_autofillTrigger: (evt: any) => void|+placement(): this;+focus(): this;+move(): this;+autofillRange(): this;+autofillTrigger(): this;+addRange(): this;+updateLastRange(): void;+addAreaOutline(): void;+addArea(): this;+addRowHeaderArea(): this;+addColHeaderArea(): this;+addCopyArea(): this;+addAutofillArea(): this;+setFocusArea(): this;+showCopy(): void;+clearCopy(): void;+clear(): void]
[SelectEditor|+_searchInput: HElement;+_content: HElement;+_width: number;+_height: number;+_position: Position;+_options: OptionsFunc|+query(): Promise<void>;+options(): this;+position(): this;+rect(): this;+show(): this]
[Editor]<:-[SelectEditor]
[TextEditor|+_text: HElement;+_textMeasure: HElement;+_editing: boolean|+value(): this;+rect(): this;+hide(): this]
[Editor]<:-[TextEditor]